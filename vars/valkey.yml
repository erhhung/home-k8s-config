# valkey_pass: {vault.yml}

valkey_namespace: valkey
valkey_release_name: valkey-cluster

valkey_host_names: # 192.168.0.222-227
  - valkey
  - redis

# remember to add valkey1.fourteeners.local thru valkey6.
# (valkey. = <all-vIPs> plus aliases redis1. thru redis6.)
# to pfSense DNS using kube virtual IPs: 192.168.0.222-227
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_filters.html#products
valkey_fqdns: "{{ valkey_host_names | product(search_domains) | map('join','.') }}"

# total nodes = primaries + replicas * primaries
# 6 nodes = 3 primaries + 1 replica per primary
# must have 3+ primaries or cluster init fails
valkey_node_count: 6

# https://docs.ansible.com/ansible/latest/collections/ansible/utils/ipmath_filter.html
# (requires Python package "netaddr" on Ansible controller)
# ["192.168.0.222", ..."192.168.0.227"]
valkey_lb_ips: |
  {% set ips = [] %}
  {% for i in range(valkey_node_count) %}
  {%   set _ = ips.append(rke_lb_vip | ansible.utils.ipmath(i + 1)) %}
  {% endfor %}
  {{ ips    }}

# ["valkey-cluster-0-svc.valkey.svc.cluster.local"]
valkey_node_fqdns: |
  {% set fqdns = [] %}
  {% for i in range(valkey_node_count) %}
  {%   set _ = fqdns.append(valkey_release_name ~'-'~ i ~'-svc.'~
                            valkey_namespace ~'.svc.cluster.local') %}
  {% endfor %}
  {{ fqdns  }}

# node endpoints: ["{FQDN}:6379"]
valkey_node_eps: "{{ valkey_node_fqdns | product(['6379']) | map('join',':') }}"
# ["valkeys://{node-endpoint}"]
valkey_cluster_urls: "{{ ['valkeys://'] | product(valkey_node_eps) | map('join') }}"
# ["rediss://{node-endpoint}"]
redis_cluster_urls: "{{ ['rediss://'] | product(valkey_node_eps) | map('join') }}"

valkey_secrets:
  node-tls: valkey-tls
  password: valkey-password

valkey_chart_version: "3.0.3"
# https://github.com/bitnami/charts/tree/main/bitnami/valkey-cluster
# https://github.com/bitnami/charts/tree/main/bitnami/valkey-cluster/values.yaml
valkey_chart_values:
  tls: # for replication traffic
    enabled: true
    # IRedis doesn't currently support mTLS parameters
    authClients: false # require nodes to authenticate
    existingSecret: "{{ valkey_secrets['node-tls'] }}"
    certFilename: tls.crt
    certKeyFilename: tls.key
    certCAFilename: ca.crt

  usePassword: true
  existingSecret: "{{ valkey_secrets['password'] }}"
  existingSecretPasswordKey: password

  persistence:
    enabled: true
    storageClass: "{{ default_storage_class }}"
    accessModes: ["ReadWriteOnce"]
    # min XFS volume size is 300Mi
    size: 320Mi

  persistentVolumeClaimRetentionPolicy:
    enabled: true
    whenScaled: Retain
    whenDeleted: Delete

  valkey:
    # must be yes in quotes!
    useAOFPersistence: "yes"

    # use a preset instead of explicitly configuring resources:
    # none, nano, micro, small, medium, large, xlarge, 2xlarge
    resourcesPreset: nano
    # resources: ~

    # required for cluster joins
    podManagementPolicy: Parallel
    podAntiAffinityPreset: soft

    containerPorts:
      valkey: 6379
      bus: 16379

  cluster:
    init: true
    nodes: "{{ valkey_node_count }}"
    replicas: 1 # per primary

    externalAccess:
      enabled: true
      service:
        port: 6379
        type: LoadBalancer
        # create one service per node and
        # expose on IPs 192.168.0.222-227
        loadBalancerIP: "{{ valkey_lb_ips }}"

  metrics:
    # https://github.com/bitnami/charts/tree/main/bitnami/valkey-cluster#metrics
    enabled: true
    serviceMonitor:
      enabled: false # enable only if Prometheus Operator is installed
