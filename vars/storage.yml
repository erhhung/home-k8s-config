data_lv:
  lv: data-lv # name of logical volume
  vg: ubuntu-vg # name of volume group
  fs: xfs # volume filesystem type
  # unit capitalization: g=GB and G=GiB
  size: 95%FREE # size of logical volume
  mount: /data # path to mount volume

storage_classes:
  default: longhorn # 2 replicas
  single: longhorn-single # 1 replica
  static: longhorn-static
  local: local-storage
  nfs: nfs-qnap

# cannot use any other namespace!
longhorn_namespace: longhorn-system

# https://github.com/longhorn/charts/tree/master/charts/longhorn
longhorn_chart_version: "1.8.1"
longhorn_release_name: longhorn

# https://github.com/longhorn/charts/tree/master/charts/longhorn/values.yaml
# https://longhorn.io/docs/1.8.1/references/settings/
longhorn_chart_values:
  longhornUI:
    replicas: 1

  persistence:
    defaultFsType: xfs
    # total copies of data
    defaultClassReplicaCount: 2
    # what happens when PVC is released
    reclaimPolicy: Delete
    # allow live migration of Longhorn
    # volumes from one node to another
    migratable: true

  defaultSettings:
    defaultDataPath: "{{ data_lv.mount }}"
    defaultReplicaCount: 2

  service:
    ui:
      type: Rancher-Proxy

  ingress:
    # access Longhorn UI via Rancher Server
    # console instead (see service.ui.type)
    enabled: false

  metrics:
    # scrapes longhorn-backend service (longhorn-manager
    # DaemonSet) on port 9500 (non-TLS) on path /metrics
    serviceMonitor:
      enabled: "{{ prometheus_crds_installed }}"
      additionalLabels:
        release: "{{ monitoring_release_name }}"

# https://computingforgeeks.com/configure-nfs-as-kubernetes-persistent-volume-storage/
nfs_mount_opts: rw,nosuid,nodev,noexec,hard,timeo=600,retrans=3,rsize=32768,wsize=32768

# https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/tree/master/charts/nfs-subdir-external-provisioner/values.yaml
# NOTE: storage class settings cannot be changed
# after creation without deletion and recreation
nfs_provisioners:
  - cluster: k3s
    name: qnap
    server: qnap.fourteeners.local
    path: /k8s_data/k3s
    storageClass:
      name: "{{ storage_classes['nfs'] }}"
      accessModes: ReadWriteOnce
      volumeBindingMode: Immediate
      reclaimPolicy: Delete
      onDelete: delete

  - cluster: rke
    name: qnap
    server: qnap.fourteeners.local
    path: /k8s_data/rke
    storageClass:
      name: "{{ storage_classes['nfs'] }}"
      accessModes: ReadWriteOnce
      volumeBindingMode: WaitForFirstConsumer
      reclaimPolicy: Delete
      onDelete: delete

# https://grafana.com/grafana/dashboards/?search=Longhorn&dataSource=prometheus
storage_grafana_dashboards:
  # https://grafana.com/grafana/dashboards/22705-longhorn-dashboard/
  - title: Longhorn Dashboard
    gnetId: 22705
    tags:
      - longhorn
      - storage
