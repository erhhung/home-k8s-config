# postgresql_pass: {vault.yml}
#  pgpool_db_pass: {vault.yml}

# in order to log in using client TLS cert, generate
# a cert at pki.fourteeners.local using CN=<db_user>
postgresql_users:
  - erhhung
  - "{{ keycloak_db_user }}"

postgresql_namespace: postgresql
postgresql_release_name: postgresql

postgresql_host_names: # 192.168.0.222
  - postgresql
  - postgres
  - pg

# remember to add postgresql.fourteeners.local (also postgres.
# and pg.) to pfSense DNS using kube virtual IP 192.168.0.222
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_filters.html#products
postgresql_fqdns: "{{ postgresql_host_names | product(search_domains) | map('join','.') }}"
pgpool_cluster_host: postgresql-pgpool.{{ postgresql_namespace }}.svc.cluster.local

postgresql_secrets:
  node-tls: postgresql-tls

postgresql_chart_version: "15.3.8"
# https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha
# https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha/values.yaml
postgresql_chart_values:
  nameOverride: "{{ postgresql_release_name }}"

  global:
    defaultStorageClass: "{{ default_storage_class }}"
    postgresql: &global_postgresql
      password: "{{ postgresql_pass }}" # user "postgres"
      repmgrPassword: "{{ postgresql_pass }}" # user "repmgr"
    pgpool: &global_pgpool
      adminPassword: "{{ postgresql_pass }}" # user "admin"

  persistence:
    storageClass: "{{ default_storage_class }}"
    size: 2Gi
    mountPath: /postgresql

  postgresql:
    # duplicate global settings or
    # else helm diff upgrade fails
    <<: *global_postgresql

    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha#securing-traffic-using-tls
    tls: &node_tls
      enabled: true
      certificatesSecret: "{{ postgresql_secrets['node-tls'] }}"
      certFilename: tls.crt
      certKeyFilename: tls.key
      certCAFilename: ca.crt

    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha#resource-requests-and-limits
    # use a preset instead of explicitly configuring resources:
    # none, nano, micro, small, medium, large, xlarge, 2xlarge
    # https://github.com/bitnami/charts/tree/main/bitnami/common/templates/_resources.tpl
    resourcesPreset: micro
    # resources: ~

    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha#initialize-a-fresh-instance
    initdbScripts:
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_lookup.html
      init.sql: "{{ lookup('ansible.builtin.template', template_dir ~ '/postgresql/init.sql.j2') }}"

  pgpool:
    # duplicate global settings or
    # else helm diff upgrade fails
    <<: *global_pgpool

    # use same certificate as postgresql:
    # SANs: postgresql.fourteeners.local
    #         postgres.fourteeners.local
    #               pg.fourteeners.local
    #     *.postgresql.svc.cluster.local
    #     *.postgresql.svc
    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha#securing-traffic-using-tls
    tls: *node_tls

    # use a preset instead of explicitly configuring resources:
    # none, nano, micro, small, medium, large, xlarge, 2xlarge
    resourcesPreset: micro
    # resources: ~

    customUsers:
      # semicolon-separated list of usernames & passwords
      # of users that will connect to database via pgpool
      usernames: "{{ postgresql_users | join(';') }}"
      passwords: |-
        {% set pwds = [] -%}
        {% for _ in postgresql_users -%}
        {%   set _ = pwds.append(pgpool_db_pass) -%}
        {% endfor -%}
        {{ pwds | join(';') }}

  service:
    # since PostgreSQL does not talk HTTP, we do not create
    # an Ingress; instead, we create a LoadBalancer service:
    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha#configure-the-way-how-to-expose-postgresql
    type: LoadBalancer
    # https://docs.ansible.com/ansible/latest/collections/ansible/utils/ipmath_filter.html
    # (requires Python package "netaddr" on Ansible controller)
    loadBalancerIP: "{{ rke_lb_vip | ansible.utils.ipmath(1) }}" # port 5432

  metrics:
    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha#prometheus-metrics
    enabled: true
    serviceMonitor:
      enabled: false # enable only if Prometheus Operator is installed
