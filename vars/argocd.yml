# argocd_admin_pass:   {vault.yml}
# github_access_token: {vault.yml}

argocd_namespace: argocd
argocd_host_name: argocd # alias of "homelab"

# remember to add argocd.fourteeners.local to pfSense DNS
# as an alias of homelab.fourteeners.local: 192.168.0.221
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_filters.html#products
argocd_fqdn: "{{ [argocd_host_name] | product(search_domains) | map('join','.') | first }}"

argocd_chart_version: "7.8.12"
# https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd
# https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd/values.yaml
argocd_chart_values:
  crds:
    keep: false # delete on uninstall
  global:
    domain: "{{ argocd_fqdn }}"
    revisionHistoryLimit: 2
    networkPolicy:
      create: true

  configs:
    # "argocd-cm" ConfigMap
    # https://github.com/argoproj/argo-cd/tree/master/docs/operator-manual/argocd-cm.yaml
    # all values under .configs.cm are written into ConfigMap
    cm:
      # allow users to exec into app pods from the Argo CD UI:
      # https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#the-exec-resource
      exec.enabled: true
      # https://argo-cd.readthedocs.io/en/stable/user-guide/status-badge/
      statusbadge.enabled: true
      # enable anonymous user with default role
      # permissions specified in argocd-rbac-cm
      users.anonymous.enabled: true
      # user "admin" only has "login" capability by default;
      # add another local user with "apiKey" capability for
      # using the Argo CD CLI
      accounts.erhhung: apiKey
    # "argocd-secret" Secret
    # https://github.com/argoproj/argo-cd/tree/master/docs/operator-manual/argocd-secret.yaml
    secret:
      githubSecret: "{{ github_access_token }}"
      # bcrypt hash of plain-text password:
      # htpasswd -nbBC 11 "" $ARGOCD_PASS | \
      #       tr -d ':\n' | sed 's/$2y/$2b/'
      argocdServerAdminPassword: &argocd_pass >-
        {{ argocd_admin_pass | ansible.builtin.password_hash('bcrypt',
                               salt=bcrypt_salt, rounds=bcrypt_rounds) }}
      argocdServerAdminPasswordMtime: &argocd_pass_mtime |-
        2025-03-20T00:00:00Z
      extra:
        # set password of additional
        # users created in argocd-cm
        accounts.erhhung.password: *argocd_pass
        accounts.erhhung.passwordMtime: *argocd_pass_mtime
    # "argocd-gpg-keys-cm" ConfigMap
    gpg:
      keys:
        # uid: Erhhung Yuan <erhhung@gmail.com>
        # gpg --list-keys --keyid-format long | \
        #   sed -En 's|^pub.+/([A-Z0-9]+).+$|\1|p'
        # gpg --export --output erhhung.asc --armor B9C45C9F62942408
        # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_lookup.html
        B9C45C9F62942408: "{{ lookup('ansible.builtin.file', 'vars/argocd/erhhung.asc', rstrip=false) }}"
    # "argocd-cmd-params-cm" ConfigMap
    # https://github.com/argoproj/argo-cd/tree/master/docs/operator-manual/argocd-cmd-params-cm.yaml
    params:
      controller.ignore.normalizer.jq.timeout: "2s"
      reposerver.parallelism.limit: 2
      application.namespaces: "*"
      applicationsetcontroller.namespaces: "*"
      # https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Appset-Any-Namespace/#scm-providers-secrets-consideration
      applicationsetcontroller.allowed.scm.providers: "{{
        ['github.com', 'gitlab.com', 'bitbucket.org'] |
        map('regex_replace','^','https://') | join(',')
        }}"
      # https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Appset-Any-Namespace/#tokenref-restrictions
      applicationsetcontroller.enable.tokenref.strict.mode: true
      # https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      applicationsetcontroller.enable.progressive.syncs: true

  controller:
    revisionHistoryLimit: 2
    metrics: &metrics
      enabled: true
      serviceMonitor:
        enabled: false # enable only if Prometheus Operator is installed
  applicationSet:
    # enabling the allowAnyNamespace feature requires
    # allowed.scm.providers setting in configs.params
    allowAnyNamespace: true
    metrics:
      <<: *metrics
  redis:
    metrics:
      <<: *metrics
  dex:
    # don't need IdP integration in
    # homelab environment currently
    enabled: false
  server:
    # "argocd-server-tls" Secret
    # will be created by Ansible
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#tls-certificates-used-by-argocd-server
    certificateSecret:
      enabled: false
    ingress:
      enabled: true
      tls: true
      ingressClassName: "{{ rke_ingress_class }}"
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    metrics:
      <<: *metrics
  repoServer:
    metrics:
      <<: *metrics
  commitServer:
    enabled: true
  notifications:
    metrics:
      <<: *metrics

# Istio service mesh?
argocd_use_mesh: true
