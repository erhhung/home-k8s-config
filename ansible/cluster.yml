# VS Code thinks "cluster.yaml" is RKE cluster configuration, so explicitly set schema:
# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json

# https://docs.rke2.io/install/quickstart
---
# https://github.com/lablabs/ansible-role-rke2
- name: Perform RKE2 role
  hosts: cluster
  become: true
  vars_files:
    - vars/basics.yml
    - vars/kubernetes.yml
    - vars/lablabs.rke2.yml
  roles:
    # https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_reuse_roles.html#using-roles
    - role: lablabs.rke2

# https://github.com/rancherfederal/rke2-ansible
# - name: Perform RKE2 role
#   hosts: cluster
#   become: true
#   roles:
#     - role: rancherfederal.rke2.rke2

- name: Set up shell environment for kubectl
  hosts: controlplane
  vars_files:
    - vars/basics.yml
    - vars/kubernetes.yml
  tasks:
    - name: Make RKE2 kubeconfig readable
      vars:
        file_desc: "RKE2 kubeconfig"
        file_path: "{{ rke2_kubeconfig }}"
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/readable.yml

    - name: Fetch kubeconfig file content
      run_once: true
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
      ansible.builtin.command: cat {{ rke2_kubeconfig }}
      when: file_check.stat.exists
      register: cat_kubeconfig
      changed_when: false

    - name: Merge kubeconfig into local
      vars:
        kubeconfig: "{{ rke2_kubeconfig }}"
        context: "{{ rke2_local_context }}"
      ansible.builtin.include_tasks: tasks/kubeconfig.yml

    # cannot directly pass manifest URL to src argument of
    # kubernetes.core.k8s module because it does certifcate
    # validation (its "validate_certs" arg only applies to
    # connection to the Kube API server)
    - name: Fetch registration manifest
      vars:
        manifest_url: >-
          {{ hostvars['rancher']['rke2_reg_url'] if 'rke2_reg_url' in hostvars['rancher'] else '' }}
      run_once: true
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html
      ansible.builtin.uri:
        url: "{{ manifest_url }}"
        validate_certs: false
        return_content: true
      when: manifest_url | length > 0
      register: reg_manifest

    - name: Apply registration manifest
      vars:
        # required kubernetes>=24.2 package is only available in user virtualenv
        ansible_python_interpreter: "{{ ansible_user_virtualenv }}/bin/python3"
      run_once: true
      # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/k8s_module.html
      kubernetes.core.k8s:
        definition: "{{ reg_manifest.content }}"
        state: present
        apply: true
        kubeconfig: "{{ rke2_kubeconfig }}"
        validate_certs: false
        wait: true
        wait_timeout: 30
      when: >-
        reg_manifest is defined and
        reg_manifest.content | length > 0

# https://stackoverflow.com/a/35742157/347685
# - name: Rsync kubeconfig from control plane
#   hosts: workers
#   gather_facts: false
#   become: true
#   vars_files:
#     - vars/basics.yml
#     - vars/kubernetes.yml
#   tasks:
#     - name: Transfer kubeconfig to worker node
#       # https://docs.ansible.com/ansible/latest/collections/ansible/posix/synchronize_module.html
#       ansible.posix.synchronize:
#         mode: push # from control plane to worker
#         src: "{{ rke2_kubeconfig }}"
#         dest: "{{ rke2_kubeconfig }}"
#         use_ssh_args: true
#       delegate_to: "{{ groups['controlplane'][0] }}"

- name: Set up shell environment for kubectl
  hosts: cluster
  gather_facts: false
  become: true
  vars_files:
    - vars/basics.yml
    - vars/kubernetes.yml
  vars:
    kubeconfig_content: "{{ hostvars[groups['controlplane'][0]]['cat_kubeconfig'].stdout }}"
  tasks:
    - name: Write kubeconfig on worker node
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
      ansible.builtin.copy:
        dest: "{{ rke2_kubeconfig }}"
        content: "{{ kubeconfig_content }}"
        mode: "0644"
      when: inventory_hostname in groups['workers'] and kubeconfig_content

    - name: Create /etc/profile.d/kubectl.sh
      ansible.builtin.copy:
        dest: /etc/profile.d/kubectl.sh
        content: |
          export PATH="$PATH:/var/lib/rancher/rke2/bin"
          export KUBECONFIG="{{ rke2_kubeconfig }}"
        mode: "0644"
