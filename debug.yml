---
- name: Show remote and local facts
  hosts: control_plane
  gather_facts: true
  pre_tasks:
    - name: Get controller facts
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/localfacts.yml
      when: local_python_interpreter is not defined
  tasks:
    - name: Dump "ansible_facts"
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
      ansible.builtin.debug:
        var: ansible_facts

    - name: Dump "ansible_local"
      ansible.builtin.debug:
        var: ansible_local

    - name: Local Python interpreter
      ansible.builtin.debug:
        var: local_python_interpreter

    - name: Local timezone offset
      ansible.builtin.debug:
        var: local_tz_offset

- name: Show hosts and domain names
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Show inventory groups
      ansible.builtin.debug:
        msg: |-
          groups['all']:              {{ groups['all'] }}
          groups['k8s_all']:          {{ groups['k8s_all'] }}
          groups['cluster']:          {{ groups['cluster'] }}
          groups['control_plane']:    {{ groups['control_plane'] }}
          groups['control_plane_ha']: {{ groups['control_plane_ha'] }}
          groups['workers']:          {{ groups['workers'] }}
          groups['workers_ha']:       {{ groups['workers_ha'] }}

    - name: Generate cluster FQDNs
      vars:
        search_domains: ["fourteeners.local"]
        rke_cluster_name: homelab
        rke_fqdns: >
          {{ ([rke_cluster_name] + groups['control_plane']) |
          product(search_domains) | map('join','.') | list }}
      ansible.builtin.debug:
        msg: |-
          rke_fqdns[0]:  {{ rke_fqdns[0]  }}
          rke_fqdns[1:]: {{ rke_fqdns[1:] }}

    - name: Generate hosts entries
      vars:
        search_domains: ["fourteeners.local", "erhhungyuan.com"]
        rke_cluster_name: homelab
        rke_ha_mode: true
        k8s_hosts: |
          {% set hosts = groups['k8s_all'] %}
          {% if rke_ha_mode %}
          {%   set _ = hosts.append(rke_cluster_name) %}
          {% endif %}
          {{ hosts }}
        host_ip: "{{ hostvars[host]['ansible_host'] }}"
        # if HA mode, the host "homelab" (cluster name) has its own virtual IP
        # if not HA mode, homelab is an alias for the first control plane node
        host_names: |
          {% set use_alias = not rke_ha_mode and host == groups['control_plane'][0] %}
          {{ [host, rke_cluster_name] if use_alias else [host] }}
        host_fqdns: "{{ host_names | product(search_domains) | map('join', '.')  | list }}"
        host_pairs: "{{ host_fqdns | map('regex_replace', '^([^.]+)', '\\1 \\1') | list }}"
        host_entry: "{{ ([host_ip] + (host_pairs | join(' ')) | split | unique) | join(' ') }}"
      ansible.builtin.debug:
        msg: "{{ host_entry }}"
      loop: "{{ k8s_hosts }}"
      loop_control:
        loop_var: host
        label: "{{ host_ip }}|{{ host }}"

- name: Debug expressions and statements
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Debug filtering functions
      vars:
        vc_pods:
          - ^kube-system/coredns-.*$
        get_pods: # kubernetes.core.k8s_info
          resources:
            - metadata:
                name: coredns-668c87c5d8-mjp84
                namespace: kube-system
            - metadata:
                name: argocd-application-controller-0
                namespace: argocd
        user_pods: |
          {% set pods = [] %}
          {% for meta in get_pods.resources | map(attribute='metadata') %}
          {%   set desc = meta.namespace ~'/'~ meta.name  %}
          {#   use namespace() to create a scoped object: #}
          {#   https://jinja.palletsprojects.com/en/stable/templates/#assignments #}
          {%   set pod = namespace(desc=desc, found=false) %}
          {%   for regex in vc_pods %}
          {%     set pod.found = true if not pod.found and pod.desc | regex_search(regex) %}
          {%   endfor %}
          {%   if not pod.found %}
          {%     set _ = pods.append({
                   'name':      meta.name,
                   'namespace': meta.namespace
                 }) %}
          {%   endif %}
          {% endfor %}
          {{ pods }}
      ansible.builtin.debug:
        var: user_pods

    - name: Debug regular expressions
      vars:
        find: install
        text: Host purged; no K3s/Rancher; before installing RKE2
        found: "{{ text is search(find | regex_escape, ignorecase=true) }}"
      ansible.builtin.debug:
        msg: |2-
           find: {{ find }}
           text: {{ text }}
          found: {{ found }}

- name: Useful collection of tasks
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Exit the play successfully
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/meta_module.html
      ansible.builtin.meta: end_play
