# https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha
---
- name: Install PostgreSQL on RKE cluster
  hosts: "{{ rke_control_plane_host }}"
  vars_files:
    - vars/basics.yml
    - vars/kubernetes.yml
    - vars/storage.yml
    - vars/keycloak.yml
    - vars/monitoring.yml
    - vars/postgresql.yml
  vars:
    kubeconfig: "{{ rke_kubeconfig }}"
    secret_ns: "{{ postgresql_namespace }}"
  pre_tasks:
    - name: Is the monitoring stack ready?
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/monitoring/stackready.yml
      when: monitoring_stack_ready is not defined
  tasks:
    - name: Create PostgreSQL node secret
      vars:
        cert_desc: PostgreSQL
        cert_file: postgresql
        secret_name: "{{ postgresql_secrets['node-tls'] }}"
      ansible.builtin.include_tasks: tasks/k8s/secrets/tls.pki.yml

    - name: Create Pgpool scraper secret
      vars:
        cert_desc: Pgpool scraper
        cert_file: scraper
        secret_name: "{{ postgresql_secrets['scraper-tls'] }}"
        create_ns: false
      ansible.builtin.include_tasks: tasks/k8s/secrets/tls.pki.yml

    # https://github.com/bitnami/charts/tree/main/bitnami/postgresql-ha
    - name: Install PostgreSQL HA Helm chart
      vars:
        # required kubernetes>=24.2 package only in user virtualenv
        ansible_python_interpreter: "{{ venv_python_interpreter }}"
      # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/helm_module.html
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig }}"
        chart_repo_url: https://charts.bitnami.com/bitnami
        chart_ref: postgresql-ha
        chart_version: "{{ postgresql_chart_version }}"
        release_name: "{{ postgresql_release_name }}"
        release_namespace: "{{ postgresql_namespace }}"
        release_values: "{{ postgresql_chart_values }}"
        atomic: true
        wait: true
        wait_timeout: 10m0s # requires wait=true
      timeout: 1800

    - name: Import Grafana dashboards
      vars:
        dashboards: "{{ postgresql_grafana_dashboards }}"
      ansible.builtin.include_tasks: tasks/grafana/dashboards.yml
      when: grafana_api_server_online | default(false)
  any_errors_fatal: true
