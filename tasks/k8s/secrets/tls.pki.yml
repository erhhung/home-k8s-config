# fetch certificate from PKI server
#  and create Kubernetes TLS secret
#
# pass the following vars:
#   cert_desc   <required> certificate description
#   cert_file   <required> name of .pem/.key files
#   kubeconfig  <required> path to  kubeconfig
#   secret_type [optional] default=tls/generic
#   secret_name <required> name      of Secret
#   secret_ns   <required> namespace of Secret
#   create_ns   [optional] default=true
#   if_changed  [optional] notify handler
# sets the following facts:
#   pem_chain   individual certs from .pem file
---
- name: Create {{ cert_desc }} TLS+CA secret
  become: false
  block:
    - name: Fetch cert files from PKI
      delegate_to: pki
      vars:
        ansible_python_interpreter: "{{ default_python_interpreter }}"
      # .key file may be in binary format, so base64 encode all files
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html
      ansible.builtin.command: base64 certs/{{ file }}
      loop:
        - "{{ cert_file }}.pem" # contains intermediate & root CA certs
        - "{{ cert_file }}.key"
      loop_control:
        loop_var: file
      register: certs
      changed_when: false

    - name: Split PEM into pem_chain fact
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html
      ansible.builtin.set_fact:
        # split chain into individual certs: host, intermediate & root CA
        # (pem_chain will be a list of strings with no trailing newlines)
        # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/regex_findall_filter.html
        pem_chain: "{{ certs.results[0].stdout | b64decode |
          ansible.builtin.regex_findall(
          '(-----BEGIN CERTIFICATE-----(?:\\n\\S+)+\\n-----END CERTIFICATE-----)',
          multiline=True) }}"

    - name: Create {{ secret_name }} secret
      vars:
        # base64-decoded key may be in binary format
        key: "{{ certs.results[1].stdout | b64decode }}"
        # tasks/k8s/secrets/generic.yml will use _secret_type instead of secret_type
        # to avoid recursively redefining secret_type with a different default value
        _secret_type: "{{ secret_type | default('tls') }}"

        secret_data:
          # tls.crt contains host & intermediate CA certs
          tls.crt: "{{ pem_chain[:-1] | join('\n') }}"
          # trim newline from key only if it's not in binary format
          tls.key: "{{ key | trim if _secret_type == 'tls' else key }}"
          ca.crt: "{{ pem_chain[-1] }}"
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/k8s/secrets/generic.yml
  any_errors_fatal: true
