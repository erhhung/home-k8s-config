# copies specified kubeconfig file on remote host
# to local machine and merge into ~/.kube/config.
# pass the following vars:
#   kubeconfig <required> kubeconfig path or content
#   context    <required> context/cluster/user name
#   server     <required> Kubernetes API server URL
---
- name: Merge kubeconfig into local
  run_once: true
  become: false
  vars:
    ansible_python_interpreter: "{{ local_python_interpreter }}"
  block:
    - name: Get controller facts
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/localfacts.yml
      when: local_python_interpreter is not defined

    - name: Set up kubeconfig facts
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html
      ansible.builtin.set_fact:
        temp_kubeconfig: /tmp/kubeconfig-{{ context }}-temp
        orig_kubeconfig: /tmp/kubeconfig-{{ context }}-orig
        dest_kubeconfig: /tmp/kubeconfig-{{ context }}-dest
        # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/env_lookup.html
        user_kubeconfig: "{{ lookup('ansible.builtin.env', 'HOME') }}/.kube/config"

    - name: Fetch remote kubeconfig
      vars:
        ansible_python_interpreter: "{{ default_python_interpreter }}"
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/fetch_module.html
      ansible.builtin.fetch:
        src: "{{ kubeconfig }}"
        dest: "{{ temp_kubeconfig }}"
        flat: true
      # assume kubeconfig path unless valid content
      when: not kubeconfig.startswith('apiVersion:')
      changed_when: false

    - name: Save kubeconfig content
      delegate_to: localhost
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
      ansible.builtin.copy:
        content: "{{ kubeconfig }}"
        dest: "{{ temp_kubeconfig }}"
        mode: "0644"
      when: kubeconfig.startswith('apiVersion:')
      changed_when: false

    - name: Rename kubeconfig items
      delegate_to: localhost
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html
      ansible.builtin.shell: |
        set -o pipefail
        # remove current-context so it doesn`t get merged;
        # change all "default" names to the given context;
        # change server URL to the one provided
        SERVER="{{ server }}" yq -i '
          ["default", "local", "user"] as $subs |
          (.. | select(type == "!!str" and (
             downcase as $str | $subs | contains([$str])
          ))) = "{{ context }}" |
          .clusters[].cluster.server |= env(SERVER) |
          del(.current-context)' {{ temp_kubeconfig }}
      args:
        executable: /bin/bash
      changed_when: false

    - name: Back up local kubeconfig
      delegate_to: localhost
      ansible.builtin.copy:
        src: "{{ user_kubeconfig }}"
        dest: "{{ orig_kubeconfig }}"
        remote_src: true
        mode: preserve
      changed_when: false

    - name: Merge kubeconfig files
      delegate_to: localhost
      ansible.builtin.shell: |
        set -o pipefail
        # when merging kubeconfig files where objects (clusters/users/contexts)
        # with the same name exist in separate files, the one listed first wins
        KUBECONFIG="{{ temp_kubeconfig }}:{{ orig_kubeconfig }}" \
          kubectl config view --merge --flatten | \
            sponge "{{ dest_kubeconfig }}"
      args:
        executable: /bin/bash
      changed_when: false

    - name: Update local kubeconfig
      delegate_to: localhost
      ansible.builtin.copy:
        src: "{{ dest_kubeconfig }}"
        dest: "{{ user_kubeconfig }}"
        remote_src: true
        mode: preserve
  any_errors_fatal: true
